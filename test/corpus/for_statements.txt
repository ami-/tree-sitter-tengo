==================
Classic for loop
==================

for a := 0; a < 10; a++ {
  print(a)
}

---

(source_file
  (for_statement
    (for)
    initialization: (variable_declaration
      name: (identifier)
      value: (number_literal))
    condition: (binary_expression
      left: (identifier)
      operator: (comparative_operator)
      right: (number_literal))
    update: (increment_statement
      expression: (identifier))
    body: (block
      (function_call_statement
        function: (identifier)
        arguments: (argument_list
          (argument
            (identifier)))))))

==================
For loop with condition only
==================

for a < 10 {
  print(a)
}

---

(source_file
  (for_statement
    (for)
    condition: (binary_expression
      left: (identifier)
      operator: (comparative_operator)
      right: (number_literal))
    body: (block
      (function_call_statement
        function: (identifier)
        arguments: (argument_list
          (argument
            (identifier)))))))

==================
Infinite for loop
==================

for {
  if done {
    break
  }
}

---

(source_file
  (for_statement
    (for)
    body: (block
      (if_statement
        (if)
        condition: (identifier)
        consequence: (block
          (break_statement
            (break)))))))

==================
For-in with one variable (array)
==================

for v in [1, 2, 3] {
  print(v)
}

---

(source_file
  (for_in_statement
    (for)
    value: (identifier)
    (in)
    iterable: (array_literal
      (number_literal)
      (number_literal)
      (number_literal))
    body: (block
      (function_call_statement
        function: (identifier)
        arguments: (argument_list
          (argument
            (identifier)))))))

==================
For-in with two variables (array)
==================

for i, v in [1, 2, 3] {
  print(i, v)
}

---

(source_file
  (for_in_statement
    (for)
    key: (identifier)
    value: (identifier)
    (in)
    iterable: (array_literal
      (number_literal)
      (number_literal)
      (number_literal))
    body: (block
      (function_call_statement
        function: (identifier)
        arguments: (argument_list
          (argument
            (identifier))
          (argument
            (identifier)))))))

==================
For-in with map
==================

for k, v in {k1: 1, k2: 2} {
  print(k, v)
}

---

(source_file
  (for_in_statement
    (for)
    key: (identifier)
    value: (identifier)
    (in)
    iterable: (map_literal
      (map_pair
        key: (identifier)
        value: (number_literal))
      (map_pair
        key: (identifier)
        value: (number_literal)))
    body: (block
      (function_call_statement
        function: (identifier)
        arguments: (argument_list
          (argument
            (identifier))
          (argument
            (identifier)))))))
